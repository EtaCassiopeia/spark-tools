version: 2.1

aliases:
  - &environment
    docker:
      - image: circleci/openjdk:8-jdk
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

  - &restore_cache_dependencies
    name: "Restore dependencies from the cache"
    keys:
      - sbt-dependencies-{{ checksum "build.sbt" }}
      # fallback to using the latest cache if no exact match is found
      - sbt-dependencies-

  - &update_dependencies
    name: "Update all the dependencies"
    command: cat /dev/null | sbt coverage +update

  - &save_cache_dependencies
    name: "Save dependencies in the cache"
    paths:
      - ~/.m2
      - ~/.ivy2
      - ~/.sbt
      - ~/.cache
    key: sbt-dependencies-{{ checksum "build.sbt" }}

  - &fmt_check
    name: "Check code format"
    command: cat /dev/null | sbt check

  - &export_coverage
    working_directory: ~/repo
    name: "Export code coverage report"
    command: bash <(curl -s https://codecov.io/bash)

  - &prep
    - prepare_deps

  - &all_projects
    - centrifuge
    - fenek
    - typedpath
    - plumbus


commands:
  build_project:
    description: build a sub-project #<< parameters.project_name >>
    parameters:
      project_name:
        type: string
    steps:
      - checkout
      - restore_cache: *restore_cache_dependencies
      - run:
          name: check
          command: ls -R
      #- run:
      #    name: Compile code and test code << parameters.project_name >>
      #    command: cat /dev/null | sbt << parameters.project_name >>/compile << parameters.project_name >>/test:compile
      - run:
          name: Test and compute code coverage << parameters.project_name >>
          command: cat /dev/null | sbt coverage << parameters.project_name >>/test << parameters.project_name >>/coverageReport

jobs:
  update_deps_in_cache:
    <<: *environment
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache: *restore_cache_dependencies
      - run: *update_dependencies
      - save_cache: *save_cache_dependencies

  centrifuge:
    <<: *environment
    working_directory: ~/repo
    steps:
      - build_project:
          project_name: centrifuge

  plumbus:
    <<: *environment
    working_directory: ~/repo
    steps:
      - build_project:
          project_name: plumbus

  typedpath:
    <<: *environment
    working_directory: ~/repo
    steps:
      - build_project:
          project_name: typedpath

  fenek:
    <<: *environment
    working_directory: ~/repo
    steps:
      - build_project:
          project_name: fenek

  coverage:
    <<: *environment
    working_directory: ~/repo
    steps:
      - run: *export_coverage


workflows:
  master:
    jobs:
      - update_deps_in_cache
      - centrifuge
      - typedpath
      - fenek
      - plumbus
      - coverage
          requires: *all_projects