version: 2.1

aliases:
  - &environment
    docker:
      - image: circleci/openjdk:8-jdk
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

  - &restore_cache_dependencies
    name: "Restore dependencies from the cache"
    keys:
      - sbt-dependencies-{{ checksum "build.sbt" }}
      # fallback to using the latest cache if no exact match is found
      - sbt-dependencies-

  - &update_dependencies
    name: "Update all the dependencies"
    command: .circleci/hasNotChanged build.sbt && echo "SKIPPING DEPS UPDATE" || cat /dev/null | sbt coverage +update


  - &save_cache_dependencies
    name: "Save dependencies in the cache"
    paths:
      - ~/.m2
      - ~/.ivy2
      - ~/.sbt
      - ~/.cache
    key: sbt-dependencies-{{ checksum "build.sbt" }}

  - &fmt_check
    name: "Check code format"
    command: cat /dev/null | sbt check

  - &export_coverage
    name: "Export code coverage report"
    working_directory: ~/repo
    command: bash <(curl -s https://codecov.io/bash)

  - &configure_gpg
    name: configure GPG
    command: |
      mkdir -p ~/.gnupg
      echo "charset utf-8" > ~/.gnupg/gpg.conf
      echo "use-agent" >> ~/.gnupg/gpg.conf
      echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
      echo "allow-loopback-pinentry" > ~/.gnupg/gpg-agent.conf
      chown -R $(whoami) ~/.gnupg/
      find ~/.gnupg -type f -exec chmod 600 {} \;
      find ~/.gnupg -type d -exec chmod 700 {} \;
      echo $SECR_GPG_ASC_BASE64 | base64 --decode | gpg --batch --no-tty --import --yes


commands:
  build_project:
    description: build a sub-project
    parameters:
      project_name:
        type: string
      extra_fs_deps:
        default:  ""
        type: string
    steps:
      - checkout
      - restore_cache: *restore_cache_dependencies
      #- run:
      #    name: check
      #    command: ls -R
      #- run:
      #    name: Compile code and test code << parameters.project_name >>
      #    command: cat /dev/null | sbt << parameters.project_name >>/compile << parameters.project_name >>/test:compile
      - run:
          name: Test and compute code coverage << parameters.project_name >>
          command: bash -x .circleci/hasNotChanged build.sbt << parameters.extra_fs_deps >> << parameters.project_name >> || cat /dev/null | sbt coverage << parameters.project_name >>/test << parameters.project_name >>/coverageReport

  release_all:
    description: release all sub-project
    steps:
        - checkout
        - restore_cache: *restore_cache_dependencies
        - run: *configure_gpg
        - run:
            name: Deliver all projects to maven central
            command: |
              cat /dev/null | sbt releaseEarly ||echo "NO RELEASE TODAY, DOESN'T WORK, HERE IS A ðŸ§¸!"


jobs:
  update_deps_in_cache:
    <<: *environment
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache: *restore_cache_dependencies
      - run: *update_dependencies
      - save_cache: *save_cache_dependencies

  centrifuge:
    <<: *environment
    working_directory: ~/repo
    steps:
      - build_project:
          project_name: centrifuge

  plumbus:
    <<: *environment
    working_directory: ~/repo
    steps:
      - build_project:
          project_name: plumbus

  typedpath:
    <<: *environment
    working_directory: ~/repo
    steps:
      - build_project:
          project_name: typedpath

  fenek:
    <<: *environment
    working_directory: ~/repo
    steps:
      - build_project:
          project_name: fenek
          extra_fs_deps: typedpath

  sparkzio:
    <<: *environment
    working_directory: ~/repo
    steps:
      - build_project:
          project_name: sparkZio
          extra_fs_deps: spark-zio

  release:
    <<: *environment
    working_directory: ~/repo
    steps:
      - release_all


workflows:
  master:
    jobs:
      - update_deps_in_cache
      - centrifuge
      - typedpath
      - fenek
      - plumbus
      - sparkzio
  deliver:
    triggers:
      - schedule:
          cron: "0 * * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - release